package com.yxm.sso.web.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.yxm.sso.base.controller.BaseController;
import com.yxm.sso.service.PersonService;
import com.yxm.sso.util.domain.DealResult;

/**
 * <p>
 * 说明:登陆控制层
 * </p>
 * 
 * @author:姚旭民
 * @date:2017-7-13 下午3:31:23
 */
@Controller
@RequestMapping("/user")
public class UserController extends BaseController {
	Log logger= LogFactory.getLog(UserController.class);
	@Resource
	PersonService personService;

	/**
	 * <p>
	 * 说明:
	 * </p>
	 * 
	 * @author:姚旭民
	 * @date:2017-7-13 下午3:45:52
	 */
	@RequestMapping(value = "/toLogin", method = RequestMethod.GET)
	public ModelAndView loginGet(HttpSession session, HttpServletRequest request) {
		ModelAndView model = new ModelAndView();
		DealResult temp = null;
		// 【获取是否存在了token】
		String url = request.getParameter("url");
		String token = request.getParameter("token");
		temp = personService.verifyToken(session, request, token);
		model.addObject("result", temp);
		model.setViewName(temp.getUrl());
		return model;
	}

	/**
	 * <p>
	 * 说明:如果是登录的话，那么只需要可以验证的参数就可以了
	 * </p>
	 * 
	 * @author:姚旭民
	 * @date:2017-7-13 下午3:45:52
	 */
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public ModelAndView loginPost(HttpSession session,
			HttpServletRequest request,
			@RequestParam("username") String username,
			@RequestParam("backUrl") String url) {
		ModelAndView model = new ModelAndView();
		String param = request.getQueryString();
		DealResult temp = personService.verifyLogin(session, request, username,
				url);
		model.addObject("result", temp);
		System.out.println("请求重定向地址:"+temp.getUrl());
		model.setViewName(temp.getUrl());
		return model;
	}

	/*
	 *<p>Description:用户登出的操作</p>
	 *@author:姚旭民
	 *@data:2017-7-20 下午3:30:21
	 */
	@RequestMapping("/loginOut")
	public @ResponseBody DealResult loginOut(HttpSession session, HttpServletRequest request) {
		
		return null;
	}
	
	/**
	 * <p>
	 * 说明:通过token和url来获取当前线程下面的用户信息
	 * </p>
	 * 
	 * @author:姚旭民
	 * @date:2017-7-17 下午5:01:15
	 */
	@RequestMapping("/getInfo")
	public @ResponseBody
	DealResult getInfoByToken(HttpSession session, HttpServletRequest request, HttpServletResponse response,
			@RequestParam("token") String token) {
		DealResult result = null;
		result = personService.getInfoByToken(session, request, token);
		System.out.println("修改过了:"+request.getRemoteAddr());
		return result;
	}

	/**
	 * <p>
	 * 说明:token验证，如果有人发来token验证，同时修改保存起来的backUrl，方便后面验证请求信息的时候进行验证
	 * </p>
	 * 
	 * @author:姚旭民
	 * @date:2017-7-13 下午3:58:29
	 */
	@RequestMapping("/verifyToken")
	public ModelAndView verifyToken(HttpSession session,
			HttpServletRequest request, @RequestParam("token") String token,
			@RequestParam("url") String url) {
		ModelAndView model = new ModelAndView();
		DealResult temp = personService.verifyToken(session, request, token);
		model.addObject("result", temp);
		model.setViewName(temp.getUrl());
		return model;
	}
}
